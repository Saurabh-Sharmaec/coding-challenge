create database ecomm;
use ecomm;


create table customers(
    customer_id int primary key,
    name varchar(255),
    email varchar(255),
    address varchar(255)
);

create table products(
    product_id int primary key,
    name varchar(255),
    discription varchar(255),
    price int,
    stockQuantity int
);

create table cart(
    cart_id int primary key,
    customer_id int,
    product_id int,
    quantity int,
    foreign key (customer_id) references customers (customer_id),
    foreign key (product_id) references products (product_id)
);

create table orders(
    order_id int primary key,
    customer_id int,
    order_date date,
    total_price int,
    shipping_address varchar(255),
    foreign key (customer_id) references customers (customer_id)
);

create table order_items(
    order_item_id int primary key,
    order_id int,
    product_id int,
    quantity int,
    item_amount int,
    foreign key (order_id) references orders (order_id),
    foreign key (product_id) references products (product_id)
);

insert into products (product_id, name, discription, price, stockQuantity)
values
    (1, 'Laptop', 'High performance laptop', 800, 10),
    (2, 'Smartphone', 'Latest smartphone', 600, 15),
    (3, 'Tablet', 'Portable tablet', 300, 20),
    (4, 'Headphones', 'Noise-canceling', 150, 30),
    (5, 'TV', '4K Smart TV', 900, 5),
    (6, 'Coffee Maker', 'Automatic coffee maker', 50, 25),
    (7, 'Refrigerator', 'Energy-efficient', 700, 10),
    (8, 'Microwave', 'Oven Countertop microwave', 80, 15),
    (9, 'Blender', 'High-speed blender', 70, 20),
    (10, 'Vacuum Cleaner', 'Bagless vacuum cleaner', 120, 10);

insert into customers (customer_id, name, email, address)
values
    (1, 'John Doe', 'johndoe@example.com', '123 Main St City'),
    (2, 'Jane Smith', 'janesmith@example.com', '456 Elm St Town'),
    (3, 'Robert Johnson', 'robert@example.com', '789 Oak St, Village'),
    (4, 'Sarah Brown', 'sarah@example.com', '101 Pine St, Suburb'),
    (5, 'David Lee', 'david@example.com', '234 Cedar St, District'),
    (6, 'Laura Hall', 'laura@example.com', '567 Birch St, County'),
    (7, 'Michael Davis', 'michael@example.com', '890 Maple St, State'),
    (8, 'Emma Wilson', 'emma@example.com', '321 Redwood St, Country'),
    (9, 'William Taylor', 'william@example.com', '432 Spruce St, Province'),
    (10, 'Olivia Adams', 'olivia@example.com', '765 Fir St, Territory');


insert into cart(cart_id, customer_id, product_id, quantity)
values
    (1, 1, 1, 2),
    (2, 1, 3, 1),
    (3, 2, 2, 3),
    (4, 3, 4, 4),
    (5, 3, 5, 2),
    (6, 4, 6, 1),
    (7, 5, 1, 1),
    (8, 6, 10, 2),
    (9, 6, 9, 3),
    (10, 7, 7, 2);
    select * from cart;
    
select* from orders;
insert into orders(order_id, customer_id, order_date, total_price, shipping_address)
values
    (1, 1, '2023-01-05', 1200, '123 Main St City'),
    (2, 2, '2023-02-10', 900, '456 Elm St Town'),
    (3, 3, '2023-03-15', 300, '789 Oak St, Village'),
    (4, 4, '2023-04-20', 150, '101 Pine St, Suburb'),
    (5, 5, '2023-05-25', 1800, '234 Cedar St, District'),
    (6, 6, '2023-06-30', 400, '567 Birch St, County'),
    (7, 7, '2023-07-05', 700, '890 Maple St, State'),
    (8, 8, '2023-08-10', 160, '321 Redwood St, Country'),
    (9, 9, '2023-09-15', 140, '432 Spruce St, Province'),
    (10, 10, '2023-10-20', 1400, '765 Fir St, Territory');

insert into order_items (order_item_id, order_id, product_id, quantity, item_amount)
values
    (1, 1, 1, 2, 1600),
    (2, 1, 3, 1, 300),
    (3, 2, 2, 3, 1800),
    (4, 3, 5, 2, 1800),
    (5, 4, 4, 4, 600),
    (6, 4, 6, 1, 50),
    (7, 5, 1, 1, 800),
    (8, 5, 2, 2, 1200),
    (9, 6, 10, 2, 240),
    (10, 6, 9, 3, 210);
    
    select * from order_items;


    
-- 1. Update refrigerator product price to 800.
update products
set price = 800
where product_id = 7;
select * from products;
/* 
output
# product_id, name, discription, price, stockQuantity
1, Laptop, High performance laptop, 800, 10
2, Smartphone, Latest smartphone, 600, 15
3, Tablet, Portable tablet, 300, 20
4, Headphones, Noise-canceling, 150, 30
5, TV, 4K Smart TV, 900, 5
6, Coffee Maker, Automatic coffee maker, 50, 25
7, Refrigerator, Energy-efficient, 800, 10
8, Microwave, Oven Countertop microwave, 80, 15
9, Blender, High-speed blender, 70, 20
10, Vacuum Cleaner, Bagless vacuum cleaner, 120, 10
*/




-- 2. Remove all cart items for a specific customer.
delete from cart
where customer_id = 3;
select* from cart;
/*
output
# cart_id, customer_id, product_id, quantity
1, 1, 1, 2
2, 1, 3, 1
3, 2, 2, 3
6, 4, 6, 1
7, 5, 1, 1
8, 6, 10, 2
9, 6, 9, 3
10, 7, 7, 2
*/

-- 3. Retrieve Products Priced Below $100.
select *
from products where price < 100;
/* 
output
# product_id, name, discription, price, stockQuantity
6, Coffee Maker, Automatic coffee maker, 50, 25
8, Microwave, Oven Countertop microwave, 80, 15
9, Blender, High-speed blender, 70, 20

*/



-- 4. Find Products with Stock Quantity Greater Than 5.
select *
from products
where stockquantity > 5;
/*
# product_id, name, discription, price, stockQuantity
1, Laptop, High performance laptop, 800, 10
2, Smartphone, Latest smartphone, 600, 15
3, Tablet, Portable tablet, 300, 20
4, Headphones, Noise-canceling, 150, 30
6, Coffee Maker, Automatic coffee maker, 50, 25
7, Refrigerator, Energy-efficient, 800, 10
8, Microwave, Oven Countertop microwave, 80, 15
9, Blender, High-speed blender, 70, 20
10, Vacuum Cleaner, Bagless vacuum cleaner, 120, 10
*/

-- 5. Retrieve Orders with Total Amount Between $500 and $1000.
select * from orders
where total_price  between 500 and 1000;
/*
# order_id, customer_id, order_date, total_price, shipping_address
2, 2, 2023-02-10, 900, 456 Elm St Town
7, 7, 2023-07-05, 700, 890 Maple St, State
*/

-- 6. Find Products which name end with letter ‘r’.
select *
from products
where name like '%r';

-- 7. Retrieve Cart Items for Customer 5.
select p.name , p.discription, p.price
from products p join cart c on p.product_id = c.product_id
where c.customer_id = 5;
/*
# name, discription, price
Laptop, High performance laptop, 800
*/

-- 8. Find Customers Who Placed Orders in 2023
select cr.name,o.order_date 
from orders o join customers cr on cr.customer_id = o.customer_id
where o.order_date like "2023%";
select * from orders;
/*
# name, order_date
John Doe, 2023-01-05
Jane Smith, 2023-02-10
Robert Johnson, 2023-03-15
Sarah Brown, 2023-04-20
David Lee, 2023-05-25
Laura Hall, 2023-06-30
Michael Davis, 2023-07-05
Emma Wilson, 2023-08-10
William Taylor, 2023-09-15
Olivia Adams, 2023-10-20
*/



-- 9. Determine the Minimum Stock Quantity for Each Product Category.
select p.name as category, min(p.stockQuantity)
from products p join order_items oi on oi.product_id = p.product_id
group by category;
/*
# category, min(p.stockQuantity)
Laptop, 10
Smartphone, 15
Tablet, 20
Headphones, 30
TV, 5
Coffee Maker, 25
Blender, 20
Vacuum Cleaner, 10
*/


-- 10. Calculate how much each customer spent in total.

select cr.customer_id, cr.name, sum(oi.item_amount)
from customers cr join orders o on o.customer_id=cr.customer_id
join order_items oi on oi.order_id= o.order_id
group by cr.customer_id;
/*
select cr.customer_id, cr.name, sum(oi.item_amount)
from customers cr join orders o on o.customer_id=cr.customer_id
join order_items oi on oi.order_id= o.order_id
group by cr.customer_id;

*/

-- 11. Find the average order amount for each customer.
select cr.customer_id, cr.name, avg(o.total_price) as avg_order_amount
from customers cr join orders o on cr.customer_id = o.customer_id
group by cr.customer_id;
/*
# customer_id, name, avg_order_amount
1, John Doe, 1200.0000
2, Jane Smith, 900.0000
3, Robert Johnson, 300.0000
4, Sarah Brown, 150.0000
5, David Lee, 1800.0000
6, Laura Hall, 400.0000
7, Michael Davis, 700.0000
8, Emma Wilson, 160.0000
9, William Taylor, 140.0000
10, Olivia Adams, 1400.0000
*/
-- 12.  Count the Number of Orders Placed by Each Customer.
select cr.name, count(oi.order_item_id) as order_count
from customers cr join orders o on o.customer_id =cr.customer_id
join order_items oi on  o.order_id = oi.order_id
group by cr.customer_id;
/*
output
# name, order_count
John Doe, 2
Jane Smith, 1
Robert Johnson, 1
Sarah Brown, 2
David Lee, 2
Laura Hall, 2
*/

-- 13.Find the Maximum Order Amount for Each Customer.

select cr.name, MAX(oi.item_amount) as amount
from customers cr join orders o on o.customer_id =cr.customer_id
join order_items oi on  o.order_id = oi.order_id
group by cr.customer_id;


-- 14 Get Customers Who Placed Orders Totaling Over $1000

select cr.name, oi.item_amount as amount
from customers cr join orders o on o.customer_id =cr.customer_id
join order_items oi on  o.order_id = oi.order_id
where oi.item_amount > 1000;
/*
# name, amount
John Doe, 1600
Jane Smith, 1800
Robert Johnson, 1800
David Lee, 1200
*/
-- 15 Subquery to Find Products Not in the Cart
select p.name
from products p 
where p.product_id not in (select product_id from cart);
/*
# name
Headphones
TV
Microwave
*/
